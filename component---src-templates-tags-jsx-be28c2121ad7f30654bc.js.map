{"version":3,"sources":["webpack:///./src/templates/tags.jsx"],"names":["Tags","pageContext","data","tag","allMarkdownRemark","edges","totalCount","tagHeader","className","map","node","title","frontmatter","style","boxShadow","to","fields","slug","date","dangerouslySetInnerHTML","__html","excerpt","pageQuery"],"mappings":"4FAAA,8GAqEeA,UA7DF,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACnBC,EAAQF,EAARE,IAD8B,EAERD,EAAKE,kBAA3BC,EAF8B,EAE9BA,MAAOC,EAFuB,EAEvBA,WACTC,EAAeD,EAAN,SACE,IAAfA,EAAmB,GAAK,KADX,iBAEIH,EAFJ,IAGf,OACE,kBAAC,IAAD,KACE,yBAAKK,UAAU,kBACb,4BAAKD,GACL,4BACGF,EAAMI,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACJC,EAAUD,EAAKE,YAAfD,MACR,OACE,6BACE,kBAAC,IAAD,CAAME,MAAO,CAAEC,UAAW,QAAUC,GAAIL,EAAKM,OAAOC,MAClD,4BACGN,IAGL,+BAAQD,EAAKE,YAAYM,MACzB,uBAAGC,wBAAyB,CAAEC,OAAQV,EAAKW,gBASnD,kBAAC,IAAD,CAAMN,GAAG,SAAT,eAgCD,IAAMO,EAAS,c","file":"component---src-templates-tags-jsx-be28c2121ad7f30654bc.js","sourcesContent":["import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Layout from '../components/layout'\r\nimport './tags.scss'\r\n\r\n// Components\r\n\r\nimport { Link, graphql } from \"gatsby\"\r\nconst Tags = ({ pageContext, data }) => {\r\n  const { tag } = pageContext\r\n  const { edges, totalCount } = data.allMarkdownRemark\r\n  const tagHeader = `${totalCount} post${\r\n    totalCount === 1 ? \"\" : \"s\"\r\n    } tagged with \"${tag}\"`\r\n  return (\r\n    <Layout>\r\n      <div className=\"tags-container\">\r\n        <h1>{tagHeader}</h1>\r\n        <ul>\r\n          {edges.map(({ node }) => {\r\n            const { title } = node.frontmatter\r\n            return (\r\n              <div>\r\n                <Link style={{ boxShadow: 'none' }} to={node.fields.slug}>\r\n                  <h3>\r\n                    {title}\r\n                  </h3>\r\n                </Link>\r\n                <small>{node.frontmatter.date}</small>\r\n                <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />\r\n              </div>\r\n            )\r\n          })}\r\n        </ul>\r\n        {/*\r\n              This links to a page that does not yet exist.\r\n              You'll come back to it!\r\n            */}\r\n        <Link to=\"/tags\">All tags</Link>\r\n      </div>\r\n    </Layout >\r\n  )\r\n}\r\nTags.propTypes = {\r\n  pageContext: PropTypes.shape({\r\n    tag: PropTypes.string.isRequired,\r\n  }),\r\n  data: PropTypes.shape({\r\n    allMarkdownRemark: PropTypes.shape({\r\n      totalCount: PropTypes.number.isRequired,\r\n      edges: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          node: PropTypes.shape({\r\n            frontmatter: PropTypes.shape({\r\n              title: PropTypes.string.isRequired,\r\n            }),\r\n            frontmatter: PropTypes.shape({\r\n              date: PropTypes.string.isRequired,\r\n\r\n            }),\r\n            fields: PropTypes.shape({\r\n              slug: PropTypes.string.isRequired,\r\n            }),\r\n          }),\r\n        }).isRequired\r\n      ),\r\n    }),\r\n  }),\r\n}\r\nexport default Tags\r\nexport const pageQuery = graphql`\r\n  query($tag: String) {\r\n    allMarkdownRemark(\r\n      limit: 2000\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { tags: { in: [$tag] } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          excerpt\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            title\r\n            date(formatString: \"DD MMMM, YYYY\")\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}