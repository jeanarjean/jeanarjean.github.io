{
    "componentChunkName": "component---src-templates-blog-post-jsx",
    "path": "/blog/2022-12-15-generate-sas-token-azure/",
    "result": {"data":{"site":{"siteMetadata":{"title":"jean.arjean","author":"jean.arjean"}},"markdownRemark":{"id":"08bf7dd7-f169-5b1f-8abf-d3774c8e21d3","html":"<p>Here's how to create a SAS Token for Azure Event Hub using the latest Erlang/OTP 25 in Elixir.\nThis is based on the Microsoft Documentation available <a href=\"https://learn.microsoft.com/en-us/rest/api/eventhub/generate-sas-token\">here</a></p>\n<deckgo-highlight-code language=\"elixir\" terminal=\"none\"  >\n          <code slot=\"code\">  def generate_sas_token(shared_key_name, shared_key, uri) do\n    encoded_uri = URI.encode_www_form(uri)\n\n    # Desired validity time for the token,\n    # this token will be valid for one day.\n    signed_expiry = \n      DateTime.utc_now() \n        |&gt; DateTime.add(1, :day) \n        |&gt; DateTime.to_unix()\n\n    parameters = [encoded_uri, signed_expiry]\n\n    string_to_sign = Enum.join([encoded_uri, signed_expiry], &quot;\\n&quot;)\n\n    signature = :crypto.macN(:hmac, :sha256, shared_key, string_to_sign, 32)\n\n    sig = signature |&gt; :base64.encode() |&gt; URI.encode_www_form()\n\n    &quot;SharedAccessSignature sr=#{encoded_uri}&amp;sig=#{sig}&amp;se=#{signed_expiry}&amp;skn=#{shared_key_name}&quot;\n  end</code>\n        </deckgo-highlight-code>","frontmatter":{"title":"Generate a SAS Token for Azure Event Hub in Elixir","backgroundColor":"white","tags":["elixir"],"date":"December 15, 2022"}}},"pageContext":{"slug":"/blog/2022-12-15-generate-sas-token-azure/","previous":{"fields":{"slug":"/blog/2022-10-23-ceating-an-event-feed-system-with-phoenix/"},"frontmatter":{"title":"Ceating an Event Feed System with Phoenix"}},"next":null}},
    "staticQueryHashes": ["3868140423"]}