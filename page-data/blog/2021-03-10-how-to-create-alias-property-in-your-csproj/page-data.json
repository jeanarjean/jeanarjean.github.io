{"componentChunkName":"component---src-templates-blog-post-jsx","path":"/blog/2021-03-10-how-to-create-alias-property-in-your-csproj/","result":{"data":{"site":{"siteMetadata":{"title":"jean.arjean","author":"jean.arjean"}},"markdownRemark":{"id":"fcb84134-9c42-5c71-8e32-7cdd337e9ef0","html":"<p>If you run into two assemblies with identical class and namepsace, you won't be able to differentiate them unless you use extern aliases. In order to use extern aliases, you first need to open your .csproj file of your project. You then need to modify the PackageReference or ProjetReference by adding the &#x3C;Aliases> attribute inside.\nIf it's another project in your solution:\n</p>\n<deckgo-highlight-code xml-doc  terminal=\"none\"  highlight-lines=\"\">\n          <code slot=\"code\">// Project.csproj\n&lt;ProjectReference Include=&quot;..\\Example.Project\\Example.Project.csproj&quot;&gt;\n\t&lt;Aliases&gt;CustomNamespace&lt;/Aliases&gt;\n&lt;/ProjectReference&gt;</code>\n        </deckgo-highlight-code>\n<p>or in the case of a referenced Nuget</p>\n<deckgo-highlight-code xml  terminal=\"none\"  highlight-lines=\"\">\n          <code slot=\"code\">// Project.csproj\n&lt;PackageReference Include=&quot;Microsoft.CodeAnalysis.FxCopAnalyzers&quot; Version=&quot;2.9.7&quot;&gt;\n\t&lt;Aliases&gt;CustomNamespace&lt;/Aliases&gt;\n&lt;/PackageReference&gt;</code>\n        </deckgo-highlight-code>\n<p>Then in any file you want to reference either project, simply use the following directive to make a distinction between both assemblies.</p>\n<deckgo-highlight-code csharp  terminal=\"none\"  highlight-lines=\"\">\n          <code slot=\"code\">// whatever.cs\nextern alias CustomNamespace\n\n// You can then make a distinction between the two assemblies\nusing CustomNamespace::whatevernamespace.youwant\n// You can call the other assemblyThe other assembly which you didn&#39;t touch in your .csproj will still be using the global namespace\nusing global::whatevernamespace.youwant</code>\n        </deckgo-highlight-code>\n<p>You could also have two custom namespaces for each assembly.<br>\n<em>ProjectName.csproj</em></p>\n<deckgo-highlight-code xml  terminal=\"none\"  highlight-lines=\"\">\n          <code slot=\"code\">// Project.csproj\n&lt;ProjectReference Include=&quot;..\\Example.Project1\\Example.Project1.csproj&quot;&gt;\n\t&lt;Aliases&gt;CustomNamespace1&lt;/Aliases&gt;\n&lt;/ProjectReference&gt;\n&lt;ProjectReference Include=&quot;..\\Example.Project2\\Example.Project2.csproj&quot;&gt;\n\t&lt;Aliases&gt;CustomNamespace2&lt;/Aliases&gt;\n&lt;/ProjectReference&gt;</code>\n        </deckgo-highlight-code>\n<deckgo-highlight-code csharp  terminal=\"none\"  highlight-lines=\"\">\n          <code slot=\"code\">// whatever.cs\nextern alias CustomNamespace1\nextern alias CustomNamespace2\n\nusing CustomNamespace1::whatevernamespace.youwant\nusing CustomNamespace2::whatevernamespace.youwant</code>\n        </deckgo-highlight-code>\n<p>Comments and feedback are appreciated at <a href=\"mailto:arguinjr@gmail.com?subject=Extern%20Alias%20CSharp\">arguinjr@gmail.com</a></p>","frontmatter":{"title":"How to Use Extern Alias to differentiate assemblies with the same namespace in C#","backgroundColor":"white","tags":["csharp","csproj","msbuild"],"date":"March 11, 2021","image":null}}},"pageContext":{"slug":"/blog/2021-03-10-how-to-create-alias-property-in-your-csproj/","previous":{"fields":{"slug":"/blog/2020-11-29-code-complete-16-years-later/"},"frontmatter":{"title":"Code Complete","image":{"id":"00d2b2d6-b20f-5b94-a002-b9e2ed1355a4"}}},"next":null}},"staticQueryHashes":["3868140423"]}