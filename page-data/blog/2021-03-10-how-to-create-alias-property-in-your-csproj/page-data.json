{
    "componentChunkName": "component---src-templates-blog-post-jsx",
    "path": "/blog/2021-03-10-how-to-create-alias-property-in-your-csproj/",
    "result": {"data":{"site":{"siteMetadata":{"title":"jean.arjean","author":"jean.arjean"}},"markdownRemark":{"id":"d23e8953-0638-5f1b-b1b1-658ea44eed47","html":"<p>If your project contains two assemblies with identical classes and namespaces, you won't be able to differentiate between them unless you use extern aliases. In order to use extern aliases, you first need to open the .csproj file of your project and modify the PackageReference or ProjectReference by adding the &#x3C;Aliases> attribute.<br>\nIf you're referencing another project in your solution, your .csproj should look like this:</p>\n<deckgo-highlight-code language=\"xml\" terminal=\"none\"  >\n          <code slot=\"code\">// Project.csproj\n&lt;ProjectReference Include=&quot;..\\Example.Project\\Example.Project.csproj&quot;&gt;\n\t&lt;Aliases&gt;CustomNamespace&lt;/Aliases&gt;\n&lt;/ProjectReference&gt;</code>\n        </deckgo-highlight-code>\n<p>or if you're referencing a Nuget then it should look like this:</p>\n<deckgo-highlight-code language=\"xml\" terminal=\"none\"  >\n          <code slot=\"code\">// Project.csproj\n&lt;PackageReference Include=&quot;Microsoft.CodeAnalysis.FxCopAnalyzers&quot; Version=&quot;2.9.7&quot;&gt;\n\t&lt;Aliases&gt;CustomNamespace&lt;/Aliases&gt;\n&lt;/PackageReference&gt;</code>\n        </deckgo-highlight-code>\n<p>Then in any file where you want to reference either project, simply use the following directive to make a distinction between both assemblies.</p>\n<deckgo-highlight-code language=\"csharp\" terminal=\"none\"  >\n          <code slot=\"code\">// whatever.cs\nextern alias CustomNamespace\n\n// You can then make a distinction between the two assemblies\n// The one with extern alias on will be available through the specified namespace\nusing CustomNamespace::whatevernamespace.youwant\n// The other assembly which you didn&#39;t use the extern alias on will be available through the global namespace.\nusing global::whatevernamespace.youwant</code>\n        </deckgo-highlight-code>\n<p>You could also use two custom namespaces to differentiate the assemblies.<br>\n<em>ProjectName.csproj</em></p>\n<deckgo-highlight-code language=\"xml\" terminal=\"none\"  >\n          <code slot=\"code\">// Project.csproj\n&lt;ProjectReference Include=&quot;..\\Example.Project1\\Example.Project1.csproj&quot;&gt;\n\t&lt;Aliases&gt;CustomNamespace1&lt;/Aliases&gt;\n&lt;/ProjectReference&gt;\n&lt;ProjectReference Include=&quot;..\\Example.Project2\\Example.Project2.csproj&quot;&gt;\n\t&lt;Aliases&gt;CustomNamespace2&lt;/Aliases&gt;\n&lt;/ProjectReference&gt;</code>\n        </deckgo-highlight-code>\n<deckgo-highlight-code language=\"csharp\" terminal=\"none\"  >\n          <code slot=\"code\">// whatever.cs\nextern alias CustomNamespace1\nextern alias CustomNamespace2\n\nusing CustomNamespace1::whatevernamespace.youwant\nusing CustomNamespace2::whatevernamespace.youwant</code>\n        </deckgo-highlight-code>\n<p>If you have further questions, feel free to ask them here: <a href=\"mailto:arguinjr@gmail.com?subject=Extern%20Alias%20CSharp\">arguinjr@gmail.com</a></p>","frontmatter":{"title":"How to Use 'Extern Alias' to differentiate assemblies that use the same namespace in C#","backgroundColor":"white","tags":["csharp","csproj","msbuild"],"date":"March 11, 2021"}}},"pageContext":{"slug":"/blog/2021-03-10-how-to-create-alias-property-in-your-csproj/","previous":null,"next":{"fields":{"slug":"/blog/2021-09-04-how-to-fix-object-cycle-detected-properly-automapper/"},"frontmatter":{"title":"How to Fix \"A possible object cycle was detected\" properly in your .Net project using AutoMapper"}}}},
    "staticQueryHashes": ["3868140423"]}