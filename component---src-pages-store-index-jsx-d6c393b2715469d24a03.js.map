{"version":3,"sources":["webpack:///./src/pages/store/cart.jsx","webpack:///./src/pages/store/addToCartButton.jsx","webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","webpack:///./src/pages/store/storeItem.jsx","webpack:///./src/pages/store/index.jsx"],"names":["ConnectedCart","connect","itemsInCart","price","dispatch","changeQuantity","item","quantity","type","size","cartState","cartItems","Object","keys","map","key","className","itemId","src","imagePath","title","value","onChange","e","target","handleChange","length","buttonStyles","boxShadow","letterSpacing","sizes","prices","ConnectedAddToCartButton","ownProps","obj","TypeError","addToCart","itemToSend","itemIds","style","onClick","StoreItem","React","useState","setValue","rightMarginClassName","leftMarginClassName","orientation","href","description","currentTarget","StoreHome","render","itemsToDisplay","process","split","index","Component"],"mappings":"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","file":"component---src-pages-store-index-jsx-d6c393b2715469d24a03.js","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport './cart.scss';\r\nimport CheckoutButton from \"./checkoutButton\";\r\n\r\nconst Cart = ({ itemsInCart, price, changeQuantity }) => {\r\n\r\n  const handleChange = (e, item) => {\r\n    changeQuantity(item, e.target.value)\r\n  };\r\n\r\n  const cartItems = Object.keys(itemsInCart).map((key) => {\r\n    var item = itemsInCart[key]\r\n    return <div className=\"cart-item-container\" key={item.itemId}>\r\n      <div className=\"cart-item-image-container\">\r\n        <img src={item.imagePath} className=\"cart-item-image\"></img>\r\n      </div>\r\n      <div className=\"cart-item-title\">\r\n        <div>{item.title}</div>\r\n        <div className=\"cart-item-title-size\">{item.size}</div>\r\n      </div>\r\n      <div className=\"cart-item-qty-container\">\r\n        <select value={item.quantity} onChange={e => handleChange(e, item)}>\r\n          <option>0</option>\r\n          <option>1</option>\r\n          <option>2</option>\r\n          <option>3</option>\r\n          <option>4</option>\r\n          <option>5</option>\r\n          <option>6</option>\r\n          <option>7</option>\r\n          <option>8</option>\r\n          <option>9</option>\r\n          <option>10</option>\r\n        </select>\r\n      </div>\r\n      <div className=\"cart-item-price\">\r\n        <span>{item.price},00$ each</span>\r\n      </div>\r\n    </div>\r\n  });\r\n\r\n  let cartState;\r\n  if (cartItems.length > 0) {\r\n    cartState = (<div className=\"cart-checkout-container\">\r\n      <div>\r\n        {cartItems}\r\n      </div>\r\n      <div className=\"cart-finalize-container\">\r\n        <div className=\"cart-checkout-total-title\">Total:</div>\r\n        <div className=\"cart-checkout-price\">{price+10},00 $</div>\r\n        <div className=\"cart-checkout-description\">(incl. 10$ flat</div>\r\n        <div className=\"cart-checkout-description\">rate shipping)</div>\r\n        <CheckoutButton />\r\n      </div>\r\n    </div>)\r\n  }\r\n  else {\r\n    cartState = (<p> Your cart is empty! </p>)\r\n  }\r\n\r\n  return (\r\n    <div className=\"cart-container\">\r\n      <h1 className=\"cart-checkout-title\">Cart</h1>\r\n      {cartState}\r\n    </div>)\r\n}\r\n\r\nCart.propTypes = {\r\n  itemsInCart: PropTypes.object.isRequired,\r\n  price: PropTypes.number.isRequired,\r\n  changeQuantity: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = ({ itemsInCart, price }) => {\r\n  return { itemsInCart, price };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return { changeQuantity: (item, quantity) => dispatch({ type: `MODIFY_ITEM_QUANTITY`, item, quantity, size: item.size }) }\r\n}\r\n\r\nconst ConnectedCart = connect(mapStateToProps, mapDispatchToProps)(Cart)\r\n\r\nexport default ConnectedCart;","import PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nconst buttonStyles = {\r\n  boxShadow: \"2px 5px 10px rgba(0,0,0,.1)\",\r\n  letterSpacing: \"1.5px\",\r\n}\r\nconst sizes = [\"8x12\", \"12x18\", \"24x36\"]\r\nconst prices = [20, 30, 40]\r\n\r\nconst AddToCartButton = ({item, size, addToCart}) => {\r\n  return <div>\r\n    <button className=\"add-to-cart-button\" style={buttonStyles} onClick={() => addToCart(item,size)}>Add To Cart</button>\r\n  </div>\r\n}\r\n\r\nAddToCartButton.propTypes = {\r\n  item: PropTypes.object.isRequired,\r\n  size: PropTypes.string.isRequired,\r\n  addToCart: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = ({}, ownProps) => {\r\n  const { item, size } = ownProps;\r\n  return { item, size};\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return { addToCart: (item, size) => {\r\n    debugger;\r\n    var itemToSend = {...item, itemId: item.itemIds[size], price: prices[size]}\r\n    return dispatch({ type: `ADD_TO_CART`, item: itemToSend, size: sizes[size] }) \r\n  }}\r\n}\r\n\r\nconst ConnectedAddToCartButton = connect(mapStateToProps, mapDispatchToProps)(AddToCartButton)\r\n\r\nexport default ConnectedAddToCartButton;","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}","import React from 'react';\r\nimport ConnectedAddToCartButton from './addToCartButton';\r\nimport './index.scss';\r\n\r\nconst prices = [20, 30, 40]\r\n\r\nconst StoreItem = ({item}) => {\r\n  const [value, setValue] = React.useState(\"0\");\r\n\r\n  let rightMarginClassName = 'poster-right-margin';\r\n  let leftMarginClassName = 'poster-left-margin';\r\n  if (item?.orientation == \"horizontal\") {\r\n    rightMarginClassName = 'poster-right-margin-horizontal';\r\n    leftMarginClassName = 'poster-left-margin-horizontal';\r\n  }\r\n  \r\n  return (\r\n    <div className=\"poster-container\">\r\n      <div className={leftMarginClassName}></div>\r\n      <div className=\"poster-image-container\">\r\n        <a href={item?.imagePath}>\r\n          <h1 className=\"print-title\">{item?.title}</h1>\r\n          <img src={item?.imagePath} className=\"poster-image\" />\r\n        </a>\r\n      </div>\r\n      <div className=\"poster-description-container\">\r\n        <div className=\"poster-description-text-container\">\r\n          <div className=\"poster-description-text\">{item?.description}</div>\r\n          <br />\r\n          <div className=\"poster-description-additional-information\">Premium Matte Print</div>\r\n          <div className=\"poster-description-additional-information\">Canada Only</div>\r\n          <div className=\"poster-description-additional-information\">{prices[value]}.00$</div>\r\n          <div className=\"poster-description-additional-information\">3 to 5 days shipping</div>\r\n\r\n          <div className=\"poster-description-additional-information\">\r\n            <select value={value} onChange={e => setValue(e.currentTarget.value)}>\r\n              <option value={0}>8x12</option>\r\n              <option value={1}>12x18</option>\r\n              <option value={2}>24x36</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"buy-button-container\">\r\n            <ConnectedAddToCartButton item={item} size={value}/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={rightMarginClassName}></div>\r\n    </div>)\r\n}\r\n\r\nexport default StoreItem","import React from 'react';\r\nimport Layout from '../../components/layout';\r\nimport Cart from './cart';\r\nimport './index.scss';\r\nimport StoreItem from './storeItem';\r\n\r\nclass StoreHome extends React.Component {\r\n  render() {\r\n    var lineItem0 = process.env.LINE_ITEM0.split(\",\");\r\n    var lineItem1 = process.env.LINE_ITEM1.split(\",\");\r\n    var lineItem2 = process.env.LINE_ITEM2.split(\",\");\r\n    var lineItem3 = process.env.LINE_ITEM3.split(\",\");\r\n    var lineItem4 = process.env.LINE_ITEM4.split(\",\");\r\n    var lineItem5 = process.env.LINE_ITEM5.split(\",\");\r\n    var lineItem6 = process.env.LINE_ITEM6.split(\",\");\r\n    var lineItem7 = process.env.LINE_ITEM7.split(\",\");\r\n    var lineItem8 = process.env.LINE_ITEM8.split(\",\");\r\n    var items = [{ itemIds: lineItem0,imagePath: \"/store/print1.jpg\", title: \"First Form\", description: \"First Form\", orientation: \"vertical\"},\r\n                 { itemIds: lineItem1,imagePath: \"/store/print2.jpg\", title: \"Second Form\",description: \"Second Form\", orientation: \"vertical\" },\r\n                 { itemIds: lineItem2,imagePath: \"/store/print3.jpg\", title: \"Third Form\",description: \"Third Form\", orientation: \"horizontal\" },\r\n                 { itemIds: lineItem3,imagePath: \"/store/print4.jpg\", title: \"Fourth Form\",description: \"Fourth Form\", orientation: \"vertical\" },\r\n                 { itemIds: lineItem4,imagePath: \"/store/print5.jpg\", title: \"Fifth Form\",description: \"Fifth Form\", orientation: \"horizontal\" },\r\n                 { itemIds: lineItem5,imagePath: \"/store/print6.jpg\", title: \"Business Form\",description: \"Business Form\", orientation: \"horizontal\" },\r\n                 { itemIds: lineItem6,imagePath: \"/store/print7.jpg\", title: \"New Breath\",description: \"New Breath\", orientation: \"horizontal\" },\r\n                 { itemIds: lineItem7,imagePath: \"/store/print8.jpg\", title: \"Flâneur Form\",description: \"Flâneur Form\", orientation: \"horizontal\" },\r\n                 { itemIds: lineItem8,imagePath: \"/store/print9.jpg\", title: \"Last Light\",description: \"Last Light\", orientation: \"horizontal\" },\r\n                ];\r\n    var itemsToDisplay = items.map((item, index) => (<StoreItem key={index} item={item}></StoreItem>));\r\n\r\n    return (\r\n      <Layout>\r\n        <div className=\"home-container\">\r\n          <div className=\"poster-container\">\r\n            {itemsToDisplay}\r\n            <Cart />\r\n          </div>\r\n        </div>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default StoreHome"],"sourceRoot":""}