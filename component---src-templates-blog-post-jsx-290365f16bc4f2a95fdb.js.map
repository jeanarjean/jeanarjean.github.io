{"version":3,"file":"component---src-templates-blog-post-jsx-290365f16bc4f2a95fdb.js","mappings":"qMAOMA,EAAAA,SAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,YAAAA,KAiEH,OAjEGA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,UACJC,OAAA,WAAU,IAAD,YACDC,EAAOC,KAAKC,MAAMC,KAAKC,eACvBC,EAAK,UAAGL,EAAKM,mBAAR,iBAAG,EAAkBD,aAArB,aAAG,EAAyBE,gBAAgBC,MAAMC,IACvDC,EAAkBV,MAAAA,GAAH,UAAGA,EAAMM,mBAAT,aAAG,EAAmBI,gBACrCC,EAAOX,MAAAA,GAAH,UAAGA,EAAMM,mBAAT,aAAG,EAAmBK,KAC1BC,EAAYC,GAAAA,CAAIZ,KAAKC,MAAO,gCAClC,EAA2BD,KAAKC,MAAMY,YAA9BC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,KAElB,OACE,gBAAC,KAAD,KACE,uBACEC,UAAU,iBACVC,MAAO,CACLC,gBAAgB,OAAQd,EAAT,IACfK,gBAAgB,GAAIA,IAGtB,gBAAC,IAAD,CAAQU,MAAUpB,EAAKM,YAAYc,MAAtB,MAAiCR,IAC9C,uBAAKK,UAAU,gBACb,sBAAIA,UAAU,cAAcjB,EAAKM,YAAYc,QAC5C,UAAApB,EAAKM,mBAAL,eAAkBe,OACjB,qBACEH,MAAO,CACLI,QAAS,UAFb,UAKGtB,EAAKM,mBALR,aAKG,EAAkBe,MAGvB,uBAAKH,MAAO,CAAEK,OAAQ,UACtB,gBAACC,EAAD,CAAMb,KAAMA,IACZ,uBAAKO,MAAO,CAAEK,OAAQ,UACtB,uBAAKE,wBAAyB,CAAEC,OAAQ1B,EAAK2B,QAC7C,2BAEA,sBACET,MAAO,CACLI,QAAS,OACTM,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,IAGVhB,GACC,0BACE,gBAAC,KAAD,CAAMiB,GAAIjB,EAASkB,OAAOC,KAAMC,IAAI,QAApC,KACKpB,EAAST,YAAYc,QAK7BJ,GACC,0BACE,gBAAC,KAAD,CAAMgB,GAAIhB,EAAKiB,OAAOC,KAAMC,IAAI,QAC7BnB,EAAKV,YAAYc,MADpB,YAUf,EAjEGtB,CAAyBsC,EAAAA,WAoE/B,SAASZ,EAAKtB,GACZ,IAAImC,GAAqB,EAEzB,OACE,2BACGnC,EAAMS,KAAK2B,KAAI,SAASC,GAEvB,OADAF,GAAqBA,EAAoB,GAAK,EAE5C,wBAAMG,IAAKD,GACT,gBAAC,KAAD,CACEP,GAAI,SAAWO,EAAIE,QAAQ,IAAK,KAChCvB,MAAO,CACLR,gBAAiB,qBACjBqB,QAAS,OACTW,eAAgB,OAChBC,aAAc,aACdC,MAAO,UACPC,WAAY,QAGbN,GAEH,wBACErB,MAAO,CACLI,QAAS,eACTwB,MAAO,cAUvB","sources":["webpack://rorscharg-blog/./src/templates/blog-post.jsx"],"sourcesContent":["import { graphql, Link } from 'gatsby'\r\nimport get from 'lodash/get'\r\nimport React from 'react'\r\nimport Helmet from 'react-helmet'\r\nimport { Layout } from '../components'\r\nimport './blog-post.scss'\r\n\r\nclass BlogPostTemplate extends React.Component {\r\n  render() {\r\n    const post = this.props.data.markdownRemark\r\n    const image = post.frontmatter?.image?.childImageSharp.fluid.src\r\n    const backgroundColor = post?.frontmatter?.backgroundColor\r\n    const tags = post?.frontmatter?.tags\r\n    const siteTitle = get(this.props, 'data.site.siteMetadata.title')\r\n    const { previous, next } = this.props.pageContext\r\n\r\n    return (\r\n      <Layout>\r\n        <div\r\n          className=\"post-container\"\r\n          style={{\r\n            backgroundImage: `url(${image})`,\r\n            backgroundColor: `${backgroundColor}`\r\n          }}\r\n        >\r\n          <Helmet title={`${post.frontmatter.title} | ${siteTitle}`} />\r\n          <div className=\"post-content\">\r\n            <h1 className=\"post-title\">{post.frontmatter.title}</h1>\r\n            {post.frontmatter?.date && (\r\n              <p\r\n                style={{\r\n                  display: 'block'\r\n                }}\r\n              >\r\n                {post.frontmatter?.date}\r\n              </p>\r\n            )}\r\n            <div style={{ height: '10px' }}></div>\r\n            <Tags tags={tags} />\r\n            <div style={{ height: '10px' }}></div>\r\n            <div dangerouslySetInnerHTML={{ __html: post.html }} />\r\n            <hr />\r\n\r\n            <ul\r\n              style={{\r\n                display: 'flex',\r\n                flexWrap: 'wrap',\r\n                justifyContent: 'space-between',\r\n                listStyle: 'none',\r\n                padding: 0\r\n              }}\r\n            >\r\n              {previous && (\r\n                <li>\r\n                  <Link to={previous.fields.slug} rel=\"prev\">\r\n                    ← {previous.frontmatter.title}\r\n                  </Link>\r\n                </li>\r\n              )}\r\n\r\n              {next && (\r\n                <li>\r\n                  <Link to={next.fields.slug} rel=\"next\">\r\n                    {next.frontmatter.title} →\r\n                  </Link>\r\n                </li>\r\n              )}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nfunction Tags(props) {\r\n  var currentColorIndex = -1\r\n\r\n  return (\r\n    <div>\r\n      {props.tags.map(function(tag) {\r\n        currentColorIndex = (currentColorIndex + 1) % 3\r\n        return (\r\n          <span key={tag}>\r\n            <Link\r\n              to={'/tags/' + tag.replace(' ', '-')}\r\n              style={{\r\n                backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n                padding: '10px',\r\n                textDecoration: 'none',\r\n                borderRadius: '10000000px',\r\n                color: '#f8eeee',\r\n                fontWeight: '550'\r\n              }}\r\n            >\r\n              {tag}\r\n            </Link>\r\n            <span\r\n              style={{\r\n                display: 'inline-block',\r\n                width: '6px'\r\n              }}\r\n            ></span>\r\n          </span>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BlogPostTemplate\r\n\r\nexport const pageQuery = graphql`\r\n  query($slug: String!) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        author\r\n      }\r\n    }\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      id\r\n      html\r\n      frontmatter {\r\n        title\r\n        backgroundColor\r\n        tags\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        image {\r\n          childImageSharp {\r\n            fluid(maxWidth: 2000) {\r\n              src\r\n              srcSet\r\n              sizes\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["BlogPostTemplate","render","post","this","props","data","markdownRemark","image","frontmatter","childImageSharp","fluid","src","backgroundColor","tags","siteTitle","get","pageContext","previous","next","className","style","backgroundImage","title","date","display","height","Tags","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","padding","to","fields","slug","rel","React","currentColorIndex","map","tag","key","replace","textDecoration","borderRadius","color","fontWeight","width"],"sourceRoot":""}