{"version":3,"file":"component---src-templates-tags-jsx-01c4d153fda23551969e.js","mappings":"+JAkEA,UA1Da,SAAC,GAA2B,IAAzBA,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACnBC,EAAQF,EAARE,IACR,EAA8BD,EAAKE,kBAA3BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,WACTC,EAAeD,EAAN,SACE,IAAfA,EAAmB,GAAK,KADX,iBAEEH,EAFF,IAGf,OACE,gBAAC,KAAD,KACE,uBAAKK,UAAU,kBACb,0BAAKD,GACL,0BACGF,EAAMI,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACJC,EAAUD,EAAKE,YAAfD,MACR,OACE,2BACE,gBAAC,KAAD,CAAME,MAAO,CAAEC,UAAW,QAAUC,GAAIL,EAAKM,OAAOC,MAClD,0BAAKN,IAEP,6BAAQD,EAAKE,YAAYM,MACzB,qBAAGC,wBAAyB,CAAEC,OAAQV,EAAKW,gBASnD,gBAAC,KAAD,CAAMN,GAAG,SAAT","sources":["webpack://rorscharg-blog/./src/templates/tags.jsx"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Layout } from '../components/'\nimport './tags.scss'\n\n// Components\n\nimport { Link, graphql } from 'gatsby'\nconst Tags = ({ pageContext, data }) => {\n  const { tag } = pageContext\n  const { edges, totalCount } = data.allMarkdownRemark\n  const tagHeader = `${totalCount} post${\n    totalCount === 1 ? '' : 's'\n  } tagged with \"${tag}\"`\n  return (\n    <Layout>\n      <div className=\"tags-container\">\n        <h1>{tagHeader}</h1>\n        <ul>\n          {edges.map(({ node }) => {\n            const { title } = node.frontmatter\n            return (\n              <div>\n                <Link style={{ boxShadow: 'none' }} to={node.fields.slug}>\n                  <h3>{title}</h3>\n                </Link>\n                <small>{node.frontmatter.date}</small>\n                <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n              </div>\n            )\n          })}\n        </ul>\n        {/*\n              This links to a page that does not yet exist.\n              You'll come back to it!\n            */}\n        <Link to=\"/tags\">All tags</Link>\n      </div>\n    </Layout>\n  )\n}\nTags.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired\n            }),\n            frontmatter: PropTypes.shape({\n              date: PropTypes.string.isRequired\n            }),\n            fields: PropTypes.shape({\n              slug: PropTypes.string.isRequired\n            })\n          })\n        }).isRequired\n      )\n    })\n  })\n}\nexport default Tags\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["pageContext","data","tag","allMarkdownRemark","edges","totalCount","tagHeader","className","map","node","title","frontmatter","style","boxShadow","to","fields","slug","date","dangerouslySetInnerHTML","__html","excerpt"],"sourceRoot":""}