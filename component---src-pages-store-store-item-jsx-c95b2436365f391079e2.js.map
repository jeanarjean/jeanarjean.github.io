{"version":3,"sources":["webpack:///./src/pages/store/addToCartButton.jsx","webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","webpack:///./src/pages/store/storeItem.jsx"],"names":["buttonStyles","boxShadow","letterSpacing","sizes","prices","ConnectedAddToCartButton","connect","ownProps","obj","TypeError","item","size","dispatch","addToCart","itemToSend","itemId","itemIds","price","type","className","style","onClick","StoreItem","React","useState","value","setValue","rightMarginClassName","leftMarginClassName","orientation","href","imagePath","title","src","description","onChange","e","currentTarget"],"mappings":"2IAIMA,EAAe,CACnBC,UAAW,8BACXC,cAAe,SAEXC,EAAQ,CAAC,OAAQ,QAAS,SAC1BC,EAAS,CAAC,GAAI,GAAI,IA2BlBC,EAA2BC,aAbT,SAAC,EAAIC,GAE3B,OCzBa,SAAmCC,GAChD,GAAW,MAAPA,EAAa,MAAM,IAAIC,UAAU,gCDsBI,IAElC,CAAEC,KADcH,EAAfG,KACOC,KADQJ,EAATI,SAIW,SAAAC,GACzB,MAAO,CAAEC,UAAW,SAACH,EAAMC,GAEzB,IAAIG,EAAU,iBAAOJ,EAAP,CAAaK,OAAQL,EAAKM,QAAQL,GAAOM,MAAOb,EAAOO,KACrE,OAAOC,EAAS,CAAEM,KAAK,cAAgBR,KAAMI,EAAYH,KAAMR,EAAMQ,SAIxCL,EAzBT,SAAC,GAA6B,IAA5BI,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,KAAME,EAAe,EAAfA,UACpC,OAAO,6BACL,4BAAQM,UAAU,qBAAqBC,MAAOpB,EAAcqB,QAAS,kBAAMR,EAAUH,EAAKC,KAA1F,mBAyBWN,a,2DEtCf,sDAiDeiB,UA7CG,SAAC,GAAY,IAAXZ,EAAU,EAAVA,KAAU,EACFa,IAAMC,SAAS,KAAlCC,EADqB,KACdC,EADc,KAGxBC,EAAuB,sBACvBC,EAAsB,qBAM1B,MALyB,eAArBlB,aAAA,EAAAA,EAAMmB,eACRF,EAAuB,iCACvBC,EAAsB,iCAItB,yBAAKT,UAAU,oBACb,yBAAKA,UAAWS,IAChB,yBAAKT,UAAU,0BACb,uBAAGW,KAAMpB,aAAF,EAAEA,EAAMqB,WACb,wBAAIZ,UAAU,eAAeT,aAA7B,EAA6BA,EAAMsB,OACnC,yBAAKC,IAAKvB,aAAF,EAAEA,EAAMqB,UAAWZ,UAAU,mBAGzC,yBAAKA,UAAU,gCACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,2BAA2BT,aAA1C,EAA0CA,EAAMwB,aAChD,6BACA,yBAAKf,UAAU,6CAAf,oCACA,yBAAKA,UAAU,6CAAf,eACA,yBAAKA,UAAU,6CAA6CT,aAA5D,EAA4DA,EAAMO,MAAlE,QACA,yBAAKE,UAAU,6CAAf,6BACA,yBAAKA,UAAU,6CAAf,wBAEA,yBAAKA,UAAU,6CACb,4BAAQM,MAAOA,EAAOU,SAAU,SAAAC,GAAC,OAAIV,EAASU,EAAEC,cAAcZ,SAC5D,4BAAQA,MAAO,GAAf,QACA,4BAAQA,MAAO,GAAf,SACA,4BAAQA,MAAO,GAAf,WAGJ,yBAAKN,UAAU,wBACb,kBAAC,UAAD,CAA0BT,KAAMA,EAAMC,KAAMc,OAIlD,yBAAKN,UAAWQ","file":"component---src-pages-store-store-item-jsx-c95b2436365f391079e2.js","sourcesContent":["import PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nconst buttonStyles = {\r\n  boxShadow: \"2px 5px 10px rgba(0,0,0,.1)\",\r\n  letterSpacing: \"1.5px\",\r\n}\r\nconst sizes = [\"8x12\", \"12x18\", \"24x36\"]\r\nconst prices = [20, 30, 40]\r\n\r\nconst AddToCartButton = ({item, size, addToCart}) => {\r\n  return <div>\r\n    <button className=\"add-to-cart-button\" style={buttonStyles} onClick={() => addToCart(item,size)}>Add To Cart</button>\r\n  </div>\r\n}\r\n\r\nAddToCartButton.propTypes = {\r\n  item: PropTypes.object.isRequired,\r\n  size: PropTypes.string.isRequired,\r\n  addToCart: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = ({}, ownProps) => {\r\n  const { item, size } = ownProps;\r\n  return { item, size};\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return { addToCart: (item, size) => {\r\n    debugger;\r\n    var itemToSend = {...item, itemId: item.itemIds[size], price: prices[size]}\r\n    return dispatch({ type: `ADD_TO_CART`, item: itemToSend, size: sizes[size] }) \r\n  }}\r\n}\r\n\r\nconst ConnectedAddToCartButton = connect(mapStateToProps, mapDispatchToProps)(AddToCartButton)\r\n\r\nexport default ConnectedAddToCartButton;","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}","import React from 'react';\r\nimport ConnectedAddToCartButton from './addToCartButton';\r\nimport './index.scss';\r\n\r\nconst StoreItem = ({item}) => {\r\n  const [value, setValue] = React.useState(\"0\");\r\n\r\n  let rightMarginClassName = 'poster-right-margin';\r\n  let leftMarginClassName = 'poster-left-margin';\r\n  if (item?.orientation == \"horizontal\") {\r\n    rightMarginClassName = 'poster-right-margin-horizontal';\r\n    leftMarginClassName = 'poster-left-margin-horizontal';\r\n  }\r\n  \r\n  return (\r\n    <div className=\"poster-container\">\r\n      <div className={leftMarginClassName}></div>\r\n      <div className=\"poster-image-container\">\r\n        <a href={item?.imagePath}>\r\n          <h1 className=\"print-title\">{item?.title}</h1>\r\n          <img src={item?.imagePath} className=\"poster-image\" />\r\n        </a>\r\n      </div>\r\n      <div className=\"poster-description-container\">\r\n        <div className=\"poster-description-text-container\">\r\n          <div className=\"poster-description-text\">{item?.description}</div>\r\n          <br />\r\n          <div className=\"poster-description-additional-information\">24x36 inches premium matte print</div>\r\n          <div className=\"poster-description-additional-information\">Canada Only</div>\r\n          <div className=\"poster-description-additional-information\">{item?.price}.00$</div>\r\n          <div className=\"poster-description-additional-information\">Available during December</div>\r\n          <div className=\"poster-description-additional-information\">3 to 5 days shipping</div>\r\n\r\n          <div className=\"poster-description-additional-information\">\r\n            <select value={value} onChange={e => setValue(e.currentTarget.value)}>\r\n              <option value={0}>8x12</option>\r\n              <option value={1}>12x18</option>\r\n              <option value={2}>24x36</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"buy-button-container\">\r\n            <ConnectedAddToCartButton item={item} size={value}/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={rightMarginClassName}></div>\r\n    </div>)\r\n}\r\n\r\nexport default StoreItem"],"sourceRoot":""}