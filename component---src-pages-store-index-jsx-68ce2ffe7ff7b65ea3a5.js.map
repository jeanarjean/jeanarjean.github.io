{"version":3,"sources":["webpack:///./src/pages/store/addToCartButton.jsx","webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","webpack:///./src/pages/store/storeItem.jsx","webpack:///./src/pages/store/Cart.jsx","webpack:///./src/pages/store/index.jsx"],"names":["buttonStyles","boxShadow","letterSpacing","sizes","prices","ConnectedAddToCartButton","connect","ownProps","obj","TypeError","item","size","dispatch","addToCart","itemToSend","itemId","itemIds","price","type","className","style","onClick","StoreItem","React","useState","value","setValue","rightMarginClassName","leftMarginClassName","orientation","href","imagePath","title","src","description","onChange","e","currentTarget","ConnectedCart","itemsInCart","changeQuantity","quantity","cartState","cartItems","Object","keys","map","key","target","handleChange","length","StoreHome","render","itemsToDisplay","process","split","index","Component"],"mappings":"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","file":"component---src-pages-store-index-jsx-68ce2ffe7ff7b65ea3a5.js","sourcesContent":["import PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nconst buttonStyles = {\r\n  boxShadow: \"2px 5px 10px rgba(0,0,0,.1)\",\r\n  letterSpacing: \"1.5px\",\r\n}\r\nconst sizes = [\"8x12\", \"12x18\", \"24x36\"]\r\nconst prices = [20, 30, 40]\r\n\r\nconst AddToCartButton = ({item, size, addToCart}) => {\r\n  return <div>\r\n    <button className=\"add-to-cart-button\" style={buttonStyles} onClick={() => addToCart(item,size)}>Add To Cart</button>\r\n  </div>\r\n}\r\n\r\nAddToCartButton.propTypes = {\r\n  item: PropTypes.object.isRequired,\r\n  size: PropTypes.string.isRequired,\r\n  addToCart: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = ({}, ownProps) => {\r\n  const { item, size } = ownProps;\r\n  return { item, size};\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return { addToCart: (item, size) => {\r\n    debugger;\r\n    var itemToSend = {...item, itemId: item.itemIds[size], price: prices[size]}\r\n    return dispatch({ type: `ADD_TO_CART`, item: itemToSend, size: sizes[size] }) \r\n  }}\r\n}\r\n\r\nconst ConnectedAddToCartButton = connect(mapStateToProps, mapDispatchToProps)(AddToCartButton)\r\n\r\nexport default ConnectedAddToCartButton;","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}","import React from 'react';\r\nimport ConnectedAddToCartButton from './addToCartButton';\r\nimport './index.scss';\r\n\r\nconst prices = [20, 30, 40]\r\n\r\nconst StoreItem = ({item}) => {\r\n  const [value, setValue] = React.useState(\"0\");\r\n\r\n  let rightMarginClassName = 'poster-right-margin';\r\n  let leftMarginClassName = 'poster-left-margin';\r\n  if (item?.orientation == \"horizontal\") {\r\n    rightMarginClassName = 'poster-right-margin-horizontal';\r\n    leftMarginClassName = 'poster-left-margin-horizontal';\r\n  }\r\n  \r\n  return (\r\n    <div className=\"poster-container\">\r\n      <div className={leftMarginClassName}></div>\r\n      <div className=\"poster-image-container\">\r\n        <a href={item?.imagePath}>\r\n          <h1 className=\"print-title\">{item?.title}</h1>\r\n          <img src={item?.imagePath} className=\"poster-image\" />\r\n        </a>\r\n      </div>\r\n      <div className=\"poster-description-container\">\r\n        <div className=\"poster-description-text-container\">\r\n          <div className=\"poster-description-text\">{item?.description}</div>\r\n          <br />\r\n          <div className=\"poster-description-additional-information\">24x36 inches premium matte print</div>\r\n          <div className=\"poster-description-additional-information\">Canada Only</div>\r\n          <div className=\"poster-description-additional-information\">{prices[value]}.00$</div>\r\n          <div className=\"poster-description-additional-information\">Available during December</div>\r\n          <div className=\"poster-description-additional-information\">3 to 5 days shipping</div>\r\n\r\n          <div className=\"poster-description-additional-information\">\r\n            <select value={value} onChange={e => setValue(e.currentTarget.value)}>\r\n              <option value={0}>8x12</option>\r\n              <option value={1}>12x18</option>\r\n              <option value={2}>24x36</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"buy-button-container\">\r\n            <ConnectedAddToCartButton item={item} size={value}/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={rightMarginClassName}></div>\r\n    </div>)\r\n}\r\n\r\nexport default StoreItem","import PropTypes from \"prop-types\";\r\nimport React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport './cart.scss';\r\nimport CheckoutButton from \"./checkoutButton\";\r\n\r\nconst Cart = ({ itemsInCart, price, changeQuantity }) => {\r\n\r\n  const handleChange = (e, item) => {\r\n    changeQuantity(item, e.target.value)\r\n  };\r\n\r\n  const cartItems = Object.keys(itemsInCart).map((key) => {\r\n    var item = itemsInCart[key]\r\n    return <div className=\"cart-item-container\" key={item.itemId}>\r\n      <div className=\"cart-item-image-container\">\r\n        <img src={item.imagePath} className=\"cart-item-image\"></img>\r\n      </div>\r\n      <div className=\"cart-item-title\">\r\n        <div>{item.title}</div>\r\n        <div className=\"cart-item-title-size\">{item.size}</div>\r\n      </div>\r\n      <div className=\"cart-item-qty-container\">\r\n        <select value={item.quantity} onChange={e => handleChange(e, item)}>\r\n          <option>0</option>\r\n          <option>1</option>\r\n          <option>2</option>\r\n          <option>3</option>\r\n          <option>4</option>\r\n          <option>5</option>\r\n          <option>6</option>\r\n          <option>7</option>\r\n          <option>8</option>\r\n          <option>9</option>\r\n          <option>10</option>\r\n        </select>\r\n      </div>\r\n      <div className=\"cart-item-price\">\r\n        <span>{item.price},00$ each</span>\r\n      </div>\r\n    </div>\r\n  });\r\n\r\n  let cartState;\r\n  if (cartItems.length > 0) {\r\n    cartState = (<div className=\"cart-checkout-container\">\r\n      <div>\r\n        {cartItems}\r\n      </div>\r\n      <div className=\"cart-finalize-container\">\r\n        <div className=\"cart-checkout-total-title\">Total:</div>\r\n        <div className=\"cart-checkout-price\">{price},00 $</div>\r\n        <CheckoutButton />\r\n      </div>\r\n    </div>)\r\n  }\r\n  else {\r\n    cartState = (<p> Your cart is empty! </p>)\r\n  }\r\n\r\n  return (\r\n    <div className=\"cart-container\">\r\n      <h1 className=\"cart-checkout-title\">Cart</h1>\r\n      {cartState}\r\n    </div>)\r\n}\r\n\r\nCart.propTypes = {\r\n  itemsInCart: PropTypes.object.isRequired,\r\n  price: PropTypes.number.isRequired,\r\n  changeQuantity: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = ({ itemsInCart, price }) => {\r\n  return { itemsInCart, price };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return { changeQuantity: (item, quantity) => dispatch({ type: `MODIFY_ITEM_QUANTITY`, item, quantity, size: item.size }) }\r\n}\r\n\r\nconst ConnectedCart = connect(mapStateToProps, mapDispatchToProps)(Cart)\r\n\r\nexport default ConnectedCart;","import React from 'react';\r\nimport Layout from '../../components/layout';\r\nimport Cart from './Cart';\r\nimport './index.scss';\r\nimport StoreItem from './storeItem';\r\n\r\nclass StoreHome extends React.Component {\r\n  render() {\r\n    var lineItem0 = process.env.LINE_ITEM0.split(\",\");\r\n    var lineItem1 = process.env.LINE_ITEM1.split(\",\");\r\n    var lineItem2 = process.env.LINE_ITEM2.split(\",\");\r\n    var items = [{ itemIds: lineItem0,imagePath: \"/store/print1.jpg\", title: \"First Form\", description: \"\", orientation: \"vertical\"},\r\n                 { itemIds: lineItem1,imagePath: \"/store/print3.jpg\", title: \"Second Form\",description: \"\", orientation: \"vertical\" },\r\n                 { itemIds: lineItem2,imagePath: \"/store/print4.jpg\", title: \"Third Form\",description: \"\", orientation: \"horizontal\" }];\r\n    var itemsToDisplay = items.map((item, index) => (<StoreItem key={index} item={item}></StoreItem>));\r\n\r\n    return (\r\n      <Layout>\r\n        <div className=\"home-container\">\r\n          <div className=\"poster-container\">\r\n            {itemsToDisplay}\r\n            <Cart />\r\n          </div>\r\n        </div>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default StoreHome"],"sourceRoot":""}